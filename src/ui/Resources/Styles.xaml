<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:DeveloperNews.UI.Converters"
    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/DeveloperNews.UI;component/Resources/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--  Columns  -->

    <Style x:Key="ColumnStyle"
        TargetType="Border"
        >
        <Setter Property="Margin" Value="0,10,10,10"/>
        <Setter Property="Background" Value="{DynamicResource ColumnBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ColumnBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="ColumnHeadingStyle"
        TargetType="TextBlock"
        >
        <Setter Property="Margin" Value="10,10,10,5"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource ColumnHeadingBrush}"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>


    <!--  Items  -->

    <Style x:Key="ColumnListStyle"
        TargetType="ListView"
        >
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="DockPanel.Dock" Value="Top"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="SelectedIndex" Value="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        <Setter Property="SelectedItem" Value="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        <Setter Property="SelectionMode" Value="Single"/>
    </Style>

    <Style x:Key="ColumnListItemStyle"
        TargetType="Button"
        >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Background="Transparent"
                        >
                        <ContentPresenter/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>

                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>

                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                            >
                                            <EasingColorKeyFrame
                                                KeyTime="0"
                                                Value="LightBlue"
                                                />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                            >
                                            <EasingColorKeyFrame
                                                KeyTime="0"
                                                Value="SkyBlue"
                                                />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnListItemContainerStyle"
        TargetType="ListViewItem"
        >
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <!--  https://stackoverflow.com/questions/5122334/how-do-i-make-a-wpf-button-look-like-a-link/5122377  -->

    <!--  Commands  -->

    <Style x:Key="ColumnCommandsStyle"
        TargetType="ItemsControl"
        >
        <Setter Property="Margin" Value="10,10,10,5"/>
        <Setter Property="DockPanel.Dock" Value="Bottom"/>
        <Setter Property="ItemsSource" Value="{Binding Commands}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Button x:Name="CommandButton"
                        Command="{Binding Command}"
                        Content="{Binding Name}"
                        IsEnabled="{Binding Enabled}"
                        Visibility="{Binding IsVisible, Converter={c:BoolToVisibilityConverter}}"
                        >
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <TextBlock x:Name="text"
                                    Height="30"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Cursor="Hand"
                                    FontSize="14"
                                    FontWeight="Medium"
                                    Foreground="{DynamicResource CommandActiveBrush}"
                                    >
                                    <ContentPresenter/>
                                </TextBlock>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsMouseOver" Value="true">
                                        <Setter TargetName="text" Property="Foreground" Value="{DynamicResource CommandMouseOverBrush}"/>
                                    </Trigger>

                                    <Trigger Property="Button.IsEnabled" Value="false">
                                        <Setter TargetName="text" Property="FontWeight" Value="Normal"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>